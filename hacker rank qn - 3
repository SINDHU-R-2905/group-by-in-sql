1.Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

  create  table STUDENTS(
  id int,
  name varchar(100),
  marks int
  );
  insert into STUDENTS(id,name,marks)values
  (1,'ashley',81),
  (2,'samantha',75),
  (3,'julia',76),
  (4,'belvet',84);*/
  select name
  from STUDENTS
  where marks > 75
order by SUBSTR(name,-3),id;


2.Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

  column------------------------type
1.employee_id                  1.int
2.name                         2.varchar(100)
3.months                       3.int
4.salary                       4.int

create table employee(
  employee_id int,
  name varchar(100),
  months int,
  salary int
  );
  insert into employee(employee_id,name,months,salary)values
  (12228,'rose',15,1968),
  (33645,'angela',1,3443),
  (45692,'frank',17,1608),
  (56118,'patrick',7,1345),
  (59725,'lisa',11,2330),
  (74197,'kimberly',16,4372),
  (78454,'bonnie',8,1771),
  (83565,'michael',6,2017),
  (98607,'todd',5,3396),
  (99989,'joe',9,3573);
    
    select name
from employee
order by name asc;

3.Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  per month who have been employees for less than  months. Sort your result by ascending employee_id.

  create table employee(
  employee_id int,
  name varchar(100),
  months int,
  salary int
  );

  insert into employee(employee_id,name,months,salary)values
  (12228,'rose',15,1968),
  (33645,'angela',1,3443),
  (45692,'frank',17,1608),
  (56118,'patrick',7,1345),
  (59725,'lisa',11,2330),
  (74197,'kimberly',16,4372),
  (78454,'bonnie',8,1771),
  (83565,'michael',6,2017),
  (98607,'todd',5,3396),
  (99989,'joe',9,3573);

SELECT name
FROM Employee
WHERE salary > 2000
  AND months < 10
ORDER BY employee_id ASC;


4.Query the total population of all cities in CITY where District is California.

                           CITY
field------------------------------------------------------------type
1.id                                                             1.number
2.name                                                           2.varchar2(17)
3.CountryCode                                                    3.varchar2(3)
4.district                                                       4.varchar2(20)
5.population                                                     5.number


select SUM(population) AS total_population from CITY where district = 'California';


5.Query the average population of all cities in CITY where District is California.


                           CITY
field------------------------------------------------------------type
1.id                                                             1.number
2.name                                                           2.varchar2(17)
3.CountryCode                                                    3.varchar2(3)
4.district                                                       4.varchar2(20)
5.population                                                     5.number

select AVG(POPULATION)
FROM CITY
where district ='California';

6.Query the average population for all cities in CITY, rounded down to the nearest integer.

                               CITY
field------------------------------------------------------------type
1.id                                                             1.number
2.name                                                           2.varchar2(17)
3.CountryCode                                                    3.varchar2(3)
4.district                                                       4.varchar2(20)
5.population                                                     5.number

select FLOOR(AVG(POPULATION))AS AVG_POPULATION
FROM CITY;

7.Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.


                               CITY
field------------------------------------------------------------type
1.id                                                             1.number
2.name                                                           2.varchar2(17)
3.CountryCode                                                    3.varchar2(3)
4.district                                                       4.varchar2(20)
5.population                                                     5.number


SELECT SUM(POPULATION) 
FROM CITY
WHERE COUNTRYCODE = 'JPN';



















